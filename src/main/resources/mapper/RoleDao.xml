<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygx.cattleranchmanagement.dao.RoleDao">

    <resultMap id="BaseResultMap" type="com.ygx.cattleranchmanagement.entity.Role">
        <!--@Table role-->
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleDesc" column="role_desc" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          role_id, role_name, role_desc, deleted
        from role
        where role_id = #{roleId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          role_id, role_name, role_desc, deleted
        from role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                and role_desc = #{roleDesc}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          role_id, role_name, role_desc, deleted
        from ranch_system.role
        where deleted != 1
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                and role_desc = #{roleDesc}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleId" useGeneratedKeys="true">
        insert into role(role_name, role_desc, deleted)
        values (#{roleName}, #{roleDesc}, #{deleted})
    </insert>

    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into role(role_name, role_desc, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.roleName}, #{entity.roleDesc}, #{entity.deleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into role(role_name, role_desc, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.roleDesc}, #{entity.deleted})
        </foreach>
        on duplicate key update
        role_name = values(role_name),
        role_desc = values(role_desc),
        deleted = values(deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                role_desc = #{roleDesc},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
        </set>
        where role_id = #{roleId} and deleted != 1
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        update role
        set deleted = 1
        where role_id = #{roleId}
    </delete>

    <!--通过角色名查询-->
    <select id="queryByName" resultMap="BaseResultMap">
        select
            role_id, role_name, role_desc, deleted
        from role
        where role_name like #{likeName} and deleted != 1
    </select>

</mapper>

